[Version]
Version=3007
Description=Flat assembler.\r\nGet it here:\r\nhttp://flatassembler.net/

[Environment]
; As per RadASM 2.2.1.6 Help file topic on Assembler.ini
; 	"$A=Where masm32 is installed, usually C:\Masm32
;		$B=Where RadASM finds bins, usually $A\Bin
;		$D=Where RadASM finds AddIns, usually $R\AddIns
;		$E=Where your debugger is found, usually C:\OllyDbg
;		$H=Where RadASM finds help files, usually $A\Help
;		$I=Where RadASM finds includes, usually $A\Include
;		$L=Where RadASM finds libraries, usually $A\Lib
;		$P=Where RadASM finds projects, usually $R\Projects
;		$S=Where RadASM finds sniplets, usually $R\Sniplets
;		$T=Where RadASM finds templates, usually $R\Templates
;		$M=Where RadASM finds keyboard macros, usually $R\Macro"
; As such, for example:
; 	0=$A\..\Fasm 		evaluates to: C:\Fasm
; 	Another simpler way to look at it as is:
;		$A\..\ = C:\
0=path,$A\..\Fasm;$A\..\Ollydbg
1=include,$A\..\Fasm\INCLUDE

[CharTab]
2=0251222522222232;20-2F
3=1111111111242221;30-3F

[File]
0="Assembly (*.asm,*.inc)|*.asm;*.inc"
1="Resource Files (*.rc)|*.rc"
2="Text Files (*.txt)|*.txt"
3="All Files (*.*)|*.*"
;Filebrowser,Projectbrowser,Tabtool
Type=.asm.,.inc.,.rc.,.txt.ini.def.,.exe.,.bat.
;Filebrowser filter
Filter=1,.asm.inc.rc.txt.ini.def.exe.bat.prra.
;Open filetypes
Code=.asm.inc.
Text=.txt.ini.
Hex=.obj.res.bmp.ico.cur.
;Attempt to add API's pulled in from .api files so they can be overridden with custom fonts, font
;sizes, font styles, and colors. Didn't work though.
;Api=.api.
Resource=.rc.
TplTxt=.prra.asm.inc.rc.txt.ini.def.bat.
TplBin=.exe.dll.lib.obj.res.bmp.ico.cur.

[Parse]
Assembler=3
Def=,,;,'",\
Ignore=1,format,1,include,1,invoke
Type=Code,Label,Const,Data,Struct
Code=3,1,p,proc,4,2,p,endp
Local=3,11,l,local
Label=1,28,l,:
Const=1,5,c,=,1,5,c,equ
Data=1,3,d,db,1,3,d,dw,1,3,d,dd,1,3,d,dq,1,3,d,dt
Struct=3,7,s,struct,3,7,s,union,4,7,s,struct,4,7,s,union,4,8,s,ends

[CodeComplete]
Trig=invoke
Inc=include,''
Lib=
Api=winasmApi.api,winasmConst.api,winasmStruct.api,winasmMsg.api,winfasmWord.api

[CodeBlock]
Cmnt=
0=proc $,endp,,,14
1=if,endif,elseif,else,0
2=virtual,end virtual,,,14
3=macro $,},,,6
4=? struct|? union,? ends,,,0
5=section,,,,16

[Edit]
BraceMatch=({[,)}],\,
Option=4,179

[Resource]
Option=3,3,8404992,86,0,rsrc.inc,2,%name %id

[Colors]
Colors=44204,65280,65280,65280,65280,268500736,16711680,14064640,30841856,255,16777088,33023,11585870,16727197,16777088,65535,1973790,14474460,8388608,16777215,38446679,8756694,14474460,15777984,12644544,14474460,14737632,8421504,11505963,14474460,1973790,1973790,1973790,1973790,61680,61440,16777215,0,16777215,0,8404992,12582912,16777215,16711680,12644592,0,4210816,16711680

[KeyWords]
;Registers
C0=AH AL AX BH BL BP BX CH CL CR0 CR2 CR3 CS CX DH DI DL DR0 DR1 DR2 DR3 DR6 DR7 DS DX EAX EBP EBX ECX EDI EDX ES ESI ESP FS GS MM0 MM1 MM2 MM3 MM4 MM5 MM6 MM7 SI SP SS ST TR3 TR4 TR5 TR6 TR7 XMM0 XMM1 XMM2 XMM3 XMM4 XMM5 XMM6
;Instructions
C1=AAA AAD AAM AAS ADC ADD AND CBW CLC CLD CLI CMC CMP CMPS CMPSB CMPSW CWD DAA DAS DEC DIV ESC HLT IDIV IMUL IN INC INT INTO IRET JA JAE JB JBE JC JCXZ JE JG JGE JL JLE JMP JNA JNAE JNB JNBE JNC JNE JNG JNGE JNL JNLE JNO JNP JNS JNZ JO JP JPE JPO JS JZ LAHF LDS LEA LES LODS LODSB LODSW LOOP LOOPE LOOPEW LOOPNE LOOPNEW LOOPNZ LOOPNZW LOOPW LOOPZ LOOPZW MOV MOVS MOVSB MOVSW MUL NEG NOP NOT OR OUT POP POPF PUSH PUSHF RCL RCR RET RETF RETN ROL ROR SAHF SAL SAR SBB SCAS SCASB SCASW SHL SHR STC STD STI STOS STOSB STOSW SUB TEST WAIT XCHG XLAT XLATB XOR
;Instructions
C2=ARPL BOUND BSF BSR BSWAP BT BTC BTR BTS CDQ CLTS CMPSD CMPXCHG CWDE ENTER INS INSB INSD INSW INVD INVLPG IRETD IRETDF IRETF JECXZ LAR LEAVE LFS LGDT LGS LIDT LLDT LMSW LOCK LODSD LOOPD LOOPED LOOPNED LOOPNZD LOOPZD LSL LSS LTR MOVSD MOVSX MOVZX OUTS OUTSB OUTSD OUTSW POPA POPAD POPFD PUSHA PUSHAD PUSHD PUSHFD PUSHW REP REPE REPNE REPNZ REPZ SCASD SETA SETAE SETB SETBE SETC SETE SETG SETGE SETL SETLE SETNA SETNAE SETNB SETNBE SETNC SETNE SETNG SETNGE SETNL SETNLE SETNO SETNP SETNS SETNZ SETO SETP SETPE SETPO SETS SETZ SGDT SHLD SHRD SIDT SLDT SMSW STOSD STR VERR VERW WBINVD XADD
;FPU Instructions
C3=F2XM1 FABS FADD FADDP FBLD FBSTP FCHS FCLEX FCOM FCOMP FCOMPP FCOS FDECSTP FDISI FDIV FDIVP FDIVR FDIVRP FENI FFREE FIADD FICOM FICOMP FIDIV FIDIVR FILD FIMUL FINCSTP FINIT FIST FISTP FISUB FISUBR FLD FLD1 FLDCW FLDENV FLDENVD FLDENVW FLDL2E FLDL2T FLDLG2 FLDLN2 FLDPI FLDZ FMUL FMULP FNCLEX FNDISI FNENI FNINIT FNOP FNSAVE FNSAVED FNSAVEW FNSTCW FNSTENV FNSTENVD FNSTENVW FNSTSW FPATAN FPREM FPREM1 FPTAN FRNDINT FRSTOR FRSTORD FRSTORW FSAVE FSAVED FSAVEW FSCALE FSETPM FSIN FSINCOS FSQRT FST FSTCW FSTENV FSTENVD FSTENVW FSTP FSTSW FSUB FSUBP FSUBR FSUBRP FTST FUCOM FUCOMP FUCOMPP FWAIT FXAM FXCH FXTRACT FYL2X FYL2XP1
;MMX Instructions
C4=EMMS MOVD MOVQ PACKSSDW PACKSSWB PACKUSWB PADDB PADDD PADDSB PADDSW PADDUSB PADDUSW PADDW PAND PANDN PCMPEQB PCMPEQD PCMPEQW PCMPGTB PCMPGTD PCMPGTW PMADDWD PMULHW PMULLW POR PSLLD PSLLQ PSLLW PSRAD PSRAW PSRLD PSRLQ PSRLW PSUBB PSUBD PSUBSB PSUBSW PSUBUSB PSUBUSW PSUBW PUNPCKHBW PUNPCKHDQ PUNPCKHWD PUNPCKLBW PUNPCKLDQ PUNPCKLWD PXOR
;XMM/K3D Instructions
C5=
;
C6=$ ? @@ @B @F ADDR BASIC BYTE C CARRY? DWORD FAR FAR16 FORTRAN FWORD NEAR NEAR16 OVERFLOW? OWORD PARITY? PASCAL QWORD REAL10 REAL4 REAL8 SBYTE SDWORD SIGN? STDCALL SWORD SYSCALL TBYTE VARARG WORD ZERO?
;MASM Keywords (non-code producing)
C7=%OUT .186 .286 .286C .286P .287 .386 .386C .386P .387 .486 .486P .586 .686 .686p .8086 .8087 .ALPHA .CODE .CONST .CREF .DATA .DATA? .DOSSEG .ERR .ERR1 .ERR2 .ERRB .ERRDEF .ERRDIF .ERRDIFI .ERRE .ERRIDN .ERRIDNI .ERRNB .ERRNDEF .ERRNZ .EXIT .FARDATA .FARDATA? .K3D .LALL .LFCOND .LIST .LISTALL .LISTIF .LISTMACRO .LISTMACROALL .MMX .MODEL .MSFLOAT .NO87 .NOCREF .NOLIST .NOLISTIF .NOLISTMACRO .RADIX .SALL .SEQ .SFCOND .STACK .STARTUP .TFCOND .TYPE .XALL .XCREF .XLIST .XMM ALIAS ALIGN ASSUME call CATSTR COMM COMMENT DB DD DF DOSSEG DQ DT DUP DW ECHO ELSE ELSEIF ELSEIF1 ELSEIF2 ELSEIFB ELSEIFDEF ELSEIFDIF ELSEIFDIFI ELSEIFE ELSEIFIDN ELSEIFIDNI ELSEIFNB ELSEIFNDEF END ENDIF ENDM ENDP ENDS endw EQ EQU EVEN EXITM EXTERN EXTERNDEF EXTRN FOR FORC GE GOTO GROUP GT HIGH HIGHWORD IF IF1 IF2 IFB IFDEF IFDIF IFDIFI IFE IFIDN IFIDNI IFNB IFNDEF INCLUDE INCLUDELIB INSTR INVOKE IRP IRPC LABEL LE LENGTH LENGTHOF LOCAL LOW LOWWORD LROFFSET LT MACRO MASK MOD NAME NE OFFSET OPATTR OPTION ORG PAGE POPCONTEXT PROC PROTO PTR PUBLIC PURGE PUSHCONTEXT RECORD REPEAT REPT return SEG SEGMENT SHORT SIZE SIZEOF SIZESTR STRUC STRUCT SUBSTR SUBTITLE SUBTTL TEXTEQU THIS TITLE TYPE TYPEDEF UNION WHILE WIDTH
;MASM High Level Key Words (code producing)
C8=.BREAK .CONTINUE .ELSE .ELSEIF .ENDIF .ENDW .IF .REPEAT .UNTIL .UNTILCXZ .WHILE endl locals
;CaseSensitive Macro Ops
C9=as code data entry executable format from import library readable resource section writeable
;RC file
C10=#define #include ACCELERATORS ALT AUTOCHECKBOX AUTORADIOBUTTON BEGIN BITMAP BLOCK CAPTION CLASS COMBOBOX CONTROL CURSOR DIALOGEX DISCARDABLE EDITTEXT END EXSTYLE FALSE FILEOS FILETYPE FILEVERSION FONT GROUPBOX ICON LISTBOX LTEXT MENU MENUITEM NOINVERT NULL POPUP PRODUCTVERSION PUSHBUTTON SEPARATOR SHIFT STRINGTABLE STYLE TRUE VALUE VERSIONINFO VIRTKEY
C11=CreateFile CreateThread ExitProcess FormatMessage GetCommandLine GetDriveType GetLastError GetModuleHandle GetProcAddress GetProcessHeap GetVolumeInformation HeapAlloc HeapFree LoadCursor LoadIcon LoadLibrary lstrcat lstrcmp MessageBox OpenFile ReadDirectoryChangesW ReadFile RtlZeroMemory SetUnhandledExceptionFilter ShowLastError strlen strlenW WINAPI
C12=Allocate_Memory Copy_Addr Copy_String Copy_String_RetCount FileManager_Copy_NameTable_Slot FileManager_Create_Add_UniqueNameTableSlot FileManager_Create_FileOpen_Slot FileManager_Get_FileOpen_NextFreeIndex FileManager_Get_FileOpenIndex_ByFilename FileManager_Initialize FileManager_OpenFile_Split Util_Generate_Escape_Backslash Util_Get_NonEscaped_StrLen Util_Get_NonEscaped_StrLen Util_Get_StrLen Util_ShowErrorMessage Util_ShowLastError Util_Str_Escaped Util_Str_GetChar_Count Util_Str_GetChar_Count_Inc Util_Str_GetChar_Count_Start Util_Str_GetChar_Count_Stop
C13=ERROR_GET_FILEOPEN_INDEX_INDEX_NOT_FOUND ERROR_GET_FILEOPEN_INDEX_NO_ELEMENTS_ALLOCATED FileManager_Fill_MemoryRegion_With_Marker FileManager_Fill_MemoryRegion_With_MarkerEx HEAP_GENERATE_EXCEPTIONS HEAP_ZERO_MEMORY MEM_MARKER_FREE MEM_MARKER_FREE_Single
C14=db dd dw rb rd rw
C15=
;On Hold
C16=

[Make]
Debug=1
Run=0,'Cmd /k',''
Make=GoRC,fasm,GoLink,
Help=
; Syntax / format
; Make ='s the commands executed, the order they appear is the order of the parameters used below
; so in this case, the order is GoRC, then fasm, then GoLink. As such, the commands executed would
; be:
; 	GoRC <$R>.res
; then
;	fasm <$C>
; then
;	GoLink <$C>.exe
;0=Window no link,'/r "$R"',"$R.res",'"$C -s"',"$C.exe",'',,'',
0=Window no link,'/r "$R"',"$R.res",'"$C" "$F.exe" -s "$F.fas"','','',,'',
ExtDebug=C:\Ollydbg\ollydbg.exe
1=
2=
3=
4=
5=
6=
7=
8=
9=
10=
11=
12=
13=
14=
15=
16=
17=
18=
19=
20=
21=
22=
23=
24=
25=
26=
27=
28=
29=
30=
31=

[Project]
Path=$A\Fasm\Projects
Code=.asm
Header=.inc

[Help]
0=Win32 Api,$A\Help\WIN32.HLP
1=Fasm,$A\Help\Fasm.pdf
2=RadASM,$A\Help\RadASM.chm

[Tool]
0=Notepad,Notepad.exe
1=Calculator,Calc.exe
2=Paint,mspaint.exe
3=-,
4=Command line,cmd /k
5=Explore current path,
6=-,

[External]
0=.bmp.ico.,mspaint.exe

[HelpF1]
0=Fasm,$A\Help\Fasm.pdf
1=RC,$A\help\Resource.htm
2=Api,$A\help\WIN32.HLP
